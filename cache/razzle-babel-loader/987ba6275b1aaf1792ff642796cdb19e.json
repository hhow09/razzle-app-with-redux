{"ast":null,"code":"var __jsx = React.createElement;\nimport App from '../common/containers/App';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport configureStore from '../common/store/configureStore';\nimport express from 'express';\nimport { fetchCounter } from '../common/api/counter';\nimport qs from 'qs';\nimport { renderToString } from 'react-dom/server';\nimport serialize from 'serialize-javascript';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ? assets[entrypoint].css.map(asset => `<link rel=\"stylesheet\" href=\"${asset}\">`).join('') : '' : '';\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n  return assets[entrypoint] ? assets[entrypoint].js ? assets[entrypoint].js.map(asset => `<script src=\"${asset}\"${extra}></script>`).join('') : '' : '';\n};\n\nexport const renderApp = (req, res) => {\n  return new Promise(resolve => {\n    fetchCounter(apiResult => {\n      // Read the counter from the request, if provided\n      const params = qs.parse(req.query);\n      const counter = parseInt(params.counter, 10) || apiResult || 0; // Compile an initial state\n\n      const preloadedState = {\n        counter\n      };\n      console.log(\"preloadedState\", preloadedState); // Create a new Redux store instance\n\n      const store = configureStore(preloadedState);\n      console.log(\"store\", store); // Render the component to a string\n\n      const markup = renderToString(__jsx(Provider, {\n        store: store\n      }, __jsx(App, null))); // Grab the initial state from our Redux store\n\n      const finalState = store.getState();\n      const html = // prettier-ignore\n      `<!doctype html>\n    <html lang=\"\">\n    <head>\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta charSet='utf-8' />\n        <title>Welcome to Razzle</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        ${cssLinksFromAssets(assets, 'client')}\n    </head>\n    <body>\n        <div id=\"root\">${markup}</div>\n        <script>\n          window.__PRELOADED_STATE__ = ${serialize(finalState)}\n        </script>\n        ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n    </body>\n  </html>`;\n      resolve({\n        html\n      });\n    });\n  });\n};\nconst server = express();\nserver.disable('x-powered-by').use(express.static(process.env.RAZZLE_PUBLIC_DIR)).get('/*', async (req, res) => {\n  const {\n    html\n  } = await renderApp(req, res);\n  res.send(html);\n});\nexport default server;","map":{"version":3,"sources":["/Users/chihhaohuang/Documents/razzle-app-with-redux/src/server/index.js"],"names":["App","Provider","React","configureStore","express","fetchCounter","qs","renderToString","serialize","assets","require","process","env","RAZZLE_ASSETS_MANIFEST","cssLinksFromAssets","entrypoint","css","map","asset","join","jsScriptTagsFromAssets","extra","js","renderApp","req","res","Promise","resolve","apiResult","params","parse","query","counter","parseInt","preloadedState","console","log","store","markup","finalState","getState","html","server","disable","use","static","RAZZLE_PUBLIC_DIR","get","send"],"mappings":"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","sourcesContent":["import App from '../common/containers/App';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport configureStore from '../common/store/configureStore';\nimport express from 'express';\nimport { fetchCounter } from '../common/api/counter';\nimport qs from 'qs';\nimport { renderToString } from 'react-dom/server';\nimport serialize from 'serialize-javascript';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ?\n  assets[entrypoint].css.map(asset=>\n    `<link rel=\"stylesheet\" href=\"${asset}\">`\n  ).join('') : '' : '';\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n  return assets[entrypoint] ? assets[entrypoint].js ?\n  assets[entrypoint].js.map(asset=>\n    `<script src=\"${asset}\"${extra}></script>`\n  ).join('') : '' : '';\n};\n\nexport const renderApp = (req, res) => {\n  return new Promise((resolve)=>{\n\n    fetchCounter(apiResult => {\n\n      // Read the counter from the request, if provided\n      const params = qs.parse(req.query);\n      const counter = parseInt(params.counter, 10) || apiResult || 0;\n\n      // Compile an initial state\n      const preloadedState = { counter };\n      console.log(\"preloadedState\",preloadedState)\n      // Create a new Redux store instance\n      const store = configureStore(preloadedState);\n  \n     console.log(\"store\", store)\n\n      // Render the component to a string\n      const markup = renderToString(\n        <Provider store={store}>\n          <App />\n        </Provider>\n      );\n\n      // Grab the initial state from our Redux store\n      const finalState = store.getState();\n\n      const html =\n      // prettier-ignore\n      `<!doctype html>\n    <html lang=\"\">\n    <head>\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta charSet='utf-8' />\n        <title>Welcome to Razzle</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        ${cssLinksFromAssets(assets, 'client')}\n    </head>\n    <body>\n        <div id=\"root\">${markup}</div>\n        <script>\n          window.__PRELOADED_STATE__ = ${serialize(finalState)}\n        </script>\n        ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n    </body>\n  </html>`;\n\n    resolve({ html });\n    })\n  })\n};\n\nconst server = express();\n\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get('/*', async (req, res) => {\n    const { html } = await renderApp(req, res);\n    res.send(html);\n  });\n\nexport default server;\n"]},"metadata":{},"sourceType":"module"}